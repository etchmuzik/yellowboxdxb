\nversion: '3.8'\n\nservices:\n  # Yellow Box Web Application\n  yellowbox-web:\n    build:\n      context: ./yellowboxdxb-main\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:8080\"\n    environment:\n      - NODE_ENV=production\n      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}\n      - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}\n      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}\n      - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}\n      - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}\n      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}\n      - VITE_GOOGLE_MAPS_API_KEY=${VITE_GOOGLE_MAPS_API_KEY}\n      - VITE_MCP_SERVER_URL=http://yellowbox-mcp:3001\n    depends_on:\n      - yellowbox-mcp\n    networks:\n      - yellowbox-network\n    restart: unless-stopped\n\n  # Yellow Box MCP Server\n  yellowbox-mcp:\n    build:\n      context: ./mcp-server\n      dockerfile: Dockerfile\n    ports:\n      - \"3001:3001\"\n    environment:\n      - NODE_ENV=production\n      - PORT=3001\n      - GOOGLE_APPLICATION_CREDENTIALS=/app/serviceAccount.json\n      - FIREBASE_PROJECT_ID=yellowbox-8e0e6\n    volumes:\n      - ./yellowbox-8e0e6-firebase-adminsdk.json:/app/serviceAccount.json:ro\n    networks:\n      - yellowbox-network\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3001/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n\n  # N8N Automation Server (Optional - if running locally)\n  yellowbox-n8n:\n    image: n8nio/n8n:latest\n    ports:\n      - \"5678:5678\"\n    environment:\n      - N8N_BASIC_AUTH_ACTIVE=true\n      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}\n      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-yellowbox2024}\n      - N8N_HOST=0.0.0.0\n      - N8N_PORT=5678\n      - N8N_PROTOCOL=http\n      - NODE_ENV=production\n      - WEBHOOK_URL=http://yellowbox-n8n:5678/\n    volumes:\n      - n8n_data:/home/node/.n8n\n      - ./n8n-workflows:/workflows:ro\n    networks:\n      - yellowbox-network\n    restart: unless-stopped\n    depends_on:\n      - yellowbox-mcp\n\n  # Redis for caching and session management\n  yellowbox-redis:\n    image: redis:7-alpine\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n    networks:\n      - yellowbox-network\n    restart: unless-stopped\n    command: redis-server --appendonly yes\n\n  # Nginx Reverse Proxy\n  yellowbox-nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./ssl:/etc/nginx/ssl:ro\n    depends_on:\n      - yellowbox-web\n      - yellowbox-mcp\n      - yellowbox-n8n\n    networks:\n      - yellowbox-network\n    restart: unless-stopped\n\nvolumes:\n  n8n_data:\n    driver: local\n  redis_data:\n    driver: local\n\nnetworks:\n  yellowbox-network:\n    driver: bridge\n    ipam:\n      config:\n        - subnet: 172.20.0.0/16\n