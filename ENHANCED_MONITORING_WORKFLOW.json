\n{\n  \"meta\": {\n    \"instanceId\": \"2b4ab318d4f8eba10155f5eb0f51c5f5d883c3a9b9a506cad7c0e0c2f2c8874e\"\n  },\n  \"name\": \"Yellow Box - Comprehensive Monitoring System\",\n  \"nodes\": [\n    {\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\",\n              \"minutesInterval\": 5\n            }\n          ]\n        }\n      },\n      \"id\": \"a1b2c3d4-e5f6-7890-abcd-ef1234567890\",\n      \"name\": \"Monitoring Schedule\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"typeVersion\": 1.1,\n      \"position\": [240, 300]\n    },\n    {\n      \"parameters\": {\n        \"httpMethod\": \"POST\",\n        \"path\": \"monitoring-webhook\",\n        \"responseMode\": \"responseNode\",\n        \"options\": {\n          \"allowedOrigins\": \"*\"\n        }\n      },\n      \"id\": \"b2c3d4e5-f6g7-8901-bcde-f23456789012\",\n      \"name\": \"Monitoring Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"typeVersion\": 2,\n      \"position\": [240, 600],\n      \"webhookId\": \"yellowbox-monitoring-webhook\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Initialize monitoring data collection\\nconst timestamp = new Date().toISOString();\\nconst monitoringId = `monitoring_${Date.now()}`;\\n\\n// Define monitoring targets\\nconst targets = [\\n  {\\n    name: 'web_app_health',\\n    url: 'https://yellowbox-8e0e6.web.app',\\n    type: 'http',\\n    timeout: 10000\\n  },\\n  {\\n    name: 'api_health',\\n    url: 'https://yellowbox-8e0e6.web.app/api/health',\\n    type: 'api',\\n    timeout: 8000\\n  },\\n  {\\n    name: 'webhook_endpoint',\\n    url: 'https://n8n.srv924607.hstgr.cloud/webhook/yellowbox-sync',\\n    type: 'webhook',\\n    timeout: 5000\\n  },\\n  {\\n    name: 'firebase_connectivity',\\n    url: 'https://yellowbox-8e0e6.firebaseapp.com',\\n    type: 'firebase',\\n    timeout: 8000\\n  }\\n];\\n\\nreturn targets.map(target => ({\\n  json: {\\n    monitoringId,\\n    timestamp,\\n    target: target.name,\\n    url: target.url,\\n    type: target.type,\\n    timeout: target.timeout,\\n    status: 'pending'\\n  }\\n}));\"\n      },\n      \"id\": \"c3d4e5f6-g7h8-9012-cdef-345678901234\",\n      \"name\": \"Initialize Monitoring\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [460, 300]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $json.url }}\",\n        \"options\": {\n          \"timeout\": \"={{ $json.timeout }}\",\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"text\"\n            }\n          }\n        }\n      },\n      \"id\": \"d4e5f6g7-h8i9-0123-defg-456789012345\",\n      \"name\": \"Health Check Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [680, 300]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Process health check results\\nconst input = $input.first();\\nconst responseTime = input.json.$responseTime || 0;\\nconst statusCode = input.json.$statusCode || 0;\\nconst timestamp = new Date().toISOString();\\n\\n// Determine health status\\nlet status = 'healthy';\\nlet severity = 'info';\\nlet alertRequired = false;\\n\\nif (statusCode >= 500) {\\n  status = 'critical';\\n  severity = 'critical';\\n  alertRequired = true;\\n} else if (statusCode >= 400) {\\n  status = 'warning';\\n  severity = 'warning';\\n  alertRequired = true;\\n} else if (responseTime > 10000) {\\n  status = 'slow';\\n  severity = 'warning';\\n  alertRequired = responseTime > 15000;\\n} else if (statusCode === 0) {\\n  status = 'offline';\\n  severity = 'critical';\\n  alertRequired = true;\\n}\\n\\n// Calculate availability score\\nconst availabilityScore = statusCode >= 200 && statusCode < 400 ? 100 : 0;\\n\\n// Performance metrics\\nconst performanceScore = Math.max(0, 100 - (responseTime / 100));\\n\\nreturn {\\n  json: {\\n    monitoringId: input.json.monitoringId,\\n    target: input.json.target,\\n    url: input.json.url,\\n    type: input.json.type,\\n    timestamp,\\n    statusCode,\\n    responseTime,\\n    status,\\n    severity,\\n    alertRequired,\\n    availabilityScore,\\n    performanceScore,\\n    metadata: {\\n      responseSize: input.json.$responseSize || 0,\\n      headers: input.json.$headers || {},\\n      checked_at: timestamp\\n    }\\n  }\\n};\"\n      },\n      \"id\": \"e5f6g7h8-i9j0-1234-efgh-567890123456\",\n      \"name\": \"Process Health Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [900, 300]\n    },\n    {\n      \"parameters\": {\n        \"authentication\": \"oAuth2\",\n        \"operation\": \"append\",\n        \"documentId\": {\n          \"__rl\": true,\n          \"value\": \"1N8N_GOOGLE_SHEETS_MONITORING_SHEET_ID\",\n          \"mode\": \"id\"\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"value\": \"Health_Monitoring\",\n          \"mode\": \"name\"\n        },\n        \"valueInputMode\": \"defineBelow\",\n        \"fieldsUi\": {\n          \"values\": [\n            {\n              \"fieldId\": \"timestamp\",\n              \"fieldValue\": \"={{ $json.timestamp }}\"\n            },\n            {\n              \"fieldId\": \"target\",\n              \"fieldValue\": \"={{ $json.target }}\"\n            },\n            {\n              \"fieldId\": \"url\",\n              \"fieldValue\": \"={{ $json.url }}\"\n            },\n            {\n              \"fieldId\": \"status_code\",\n              \"fieldValue\": \"={{ $json.statusCode }}\"\n            },\n            {\n              \"fieldId\": \"response_time\",\n              \"fieldValue\": \"={{ $json.responseTime }}\"\n            },\n            {\n              \"fieldId\": \"status\",\n              \"fieldValue\": \"={{ $json.status }}\"\n            },\n            {\n              \"fieldId\": \"availability_score\",\n              \"fieldValue\": \"={{ $json.availabilityScore }}\"\n            },\n            {\n              \"fieldId\": \"performance_score\",\n              \"fieldValue\": \"={{ $json.performanceScore }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"f6g7h8i9-j0k1-2345-fghi-678901234567\",\n      \"name\": \"Log Health Status\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"typeVersion\": 4.4,\n      \"position\": [1120, 300],\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"google-sheets-oauth-credential\",\n          \"name\": \"Google Sheets OAuth2\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"id\": \"g7h8i9j0-k1l2-3456-ghij-789012345678\",\n              \"leftValue\": \"={{ $json.alertRequired }}\",\n              \"rightValue\": true,\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"equal\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"g7h8i9j0-k1l2-3456-ghij-789012345678\",\n      \"name\": \"Check Alert Required\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2,\n      \"position\": [1340, 300]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Generate alert not