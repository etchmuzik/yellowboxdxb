name: Deploy to Staging

on:
  push:
    branches:
      - develop
      - staging
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run linter
        run: npm run lint
      
      - name: Type check
        run: npm run type-check || echo "No type-check script, skipping..."
      
      - name: Run tests
        run: npm test -- --passWithNoTests || echo "No tests configured yet"

  build-preview:
    name: Build Preview
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Create staging env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.STAGING_FIREBASE_API_KEY }}" >> .env.staging
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}" >> .env.staging
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.STAGING_FIREBASE_PROJECT_ID }}" >> .env.staging
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}" >> .env.staging
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.staging
          echo "VITE_FIREBASE_APP_ID=${{ secrets.STAGING_FIREBASE_APP_ID }}" >> .env.staging
          echo "VITE_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" >> .env.staging
          echo "VITE_APP_ENVIRONMENT=staging" >> .env.staging
          echo "VITE_APP_VERSION=${{ github.sha }}" >> .env.staging
          echo "VITE_APP_BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> .env.staging
      
      - name: Build application
        run: npm run build -- --mode staging
        env:
          NODE_ENV: production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-staging
          path: dist
          retention-days: 7

  deploy-preview:
    name: Deploy Preview to Firebase
    needs: build-preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-staging
          path: dist
      
      - name: Deploy preview to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.STAGING_FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}
          expires: 7d

  deploy-staging:
    name: Deploy to Staging Environment
    needs: build-preview
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-staging
          path: dist
      
      - name: Deploy to Firebase Hosting (Staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.STAGING_FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}
          channelId: live
      
      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Staging deployment complete! View at: https://${{ secrets.STAGING_FIREBASE_PROJECT_ID }}.web.app'
            })